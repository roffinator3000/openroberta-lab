robot.plugin.factory = de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir = RobotThymio/

robot.plugin.fileExtension.source = aesl
robot.plugin.fileExtension.binary = aesl

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = /program.toolbox.beginner.xml
robot.program.toolbox.expert = /program.toolbox.expert.xml
robot.program.default = /thymioProgram.default.xml
robot.configuration.toolbox = /configuration.toolbox.xml
robot.configuration.default = /configuration.default.xml

#robot's long name to display
robot.real.name = Thymio
robot.vendor = na

# robot's info for further information
robot.info.en = https://www.thymio.org/products/meet-thymio/

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = new
robot.connection = agent
      #TODO pruefen TDM
robot.sim = false

robot.descriptor = classpath:/thymio.yml
robot.helperMethods = classpath:/common.methods.yml

robot.haswlan = false


#robot.plugin.worker.validate.configuration = de.fhg.iais.roberta.worker.validate.ThymioConfigurationValidatorWorker
robot.plugin.worker.validate.and.collect = de.fhg.iais.roberta.worker.ThymioValidatorAndCollectorWorker
robot.plugin.worker.generate = de.fhg.iais.roberta.worker.ThymioAsebaGeneratorWorker

robot.plugin.worker.setup = de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.save = de.fhg.iais.roberta.worker.SaveWorker

# robot.plugin.worker.compile= #

robot.plugin.workflow.showsource = validate.and.collect,generate
robot.plugin.workflow.compile = validate.and.collect,generate,setup,save
# robot.plugin.workflow.run = #
# robot.plugin.workflow.runnative = #
# robot.plugin.workflow.compilenative= #
robot.plugin.workflow.transform=
